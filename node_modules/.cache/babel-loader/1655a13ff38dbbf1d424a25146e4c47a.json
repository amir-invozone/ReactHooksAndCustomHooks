{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/amir-invozone/training/react/custom-hooks/src/app.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst useValueChanged = (myData, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef) => {\n  _s();\n\n  const isInitialMount = useRef(true);\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      const lenght = myData.match('.{8,}');\n      const upperCase = myData.match('(?=.*?[A-Z])');\n      const lowerCase = myData.match('(?=.*?[a-z])');\n      const speacialCharacter = myData.match('(?=.*?[#?!@$%^&*-])');\n      const number = myData.match('(?=.*?[0-9])');\n      lengthRef.current.style.color = lenght ? 'green' : 'red';\n      upperCaseRef.current.style.color = upperCase ? 'green' : 'red';\n      lowerCaseRef.current.style.color = lowerCase ? 'green' : 'red';\n      speacialCharacterRef.current.style.color = speacialCharacter ? 'green' : 'red';\n      numberRef.current.style.color = number ? 'green' : 'red';\n      console.log('adas');\n    }\n  }, [myData, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef]);\n};\n\n_s(useValueChanged, \"WZ8f3WcruOWHjbSH9ZOp50UUgV4=\");\n\nfunction Form() {\n  _s2();\n\n  const [data, setValue] = useState('');\n  const lengthRef = useRef(),\n        upperCaseRef = useRef(),\n        lowerCaseRef = useRef(),\n        speacialCharacterRef = useRef(),\n        numberRef = useRef();\n  useValueChanged(data, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef);\n  const myStyle = {\n    padding: 5,\n    borderRadius: 5\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: myStyle,\n      type: \"text\",\n      placeholder: \"Please enter your password\",\n      value: data,\n      onChange: val => {\n        setValue(val.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password must contain: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        ref: lengthRef,\n        children: \"Minimum eight characters in length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: upperCaseRef,\n        children: \"At least one upper case letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: lowerCaseRef,\n        children: \"At least one lower case letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: speacialCharacterRef,\n        children: \"At least one special character, #?!@$%^&*-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: numberRef,\n        children: \"At least one digit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Form, \"xxqUFyLQ/QigWUK/UimxEdqdnps=\", false, function () {\n  return [useValueChanged];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/amir-invozone/training/react/custom-hooks/src/app.js"],"names":["React","useState","useEffect","useRef","useValueChanged","myData","lengthRef","upperCaseRef","lowerCaseRef","speacialCharacterRef","numberRef","isInitialMount","current","lenght","match","upperCase","lowerCase","speacialCharacter","number","style","color","console","log","Form","data","setValue","myStyle","padding","borderRadius","val","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n\n\nconst useValueChanged = (myData, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef) => {\n    const isInitialMount = useRef(true);\n    useEffect(() => {\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n        }\n        else {\n            const lenght = myData.match('.{8,}');\n            const upperCase = myData.match('(?=.*?[A-Z])');\n            const lowerCase = myData.match('(?=.*?[a-z])');\n            const speacialCharacter = myData.match('(?=.*?[#?!@$%^&*-])');\n            const number = myData.match('(?=.*?[0-9])');\n            lengthRef.current.style.color = lenght ? 'green' : 'red';\n            upperCaseRef.current.style.color = upperCase ? 'green' : 'red';\n            lowerCaseRef.current.style.color = lowerCase ? 'green' : 'red';\n            speacialCharacterRef.current.style.color = speacialCharacter ? 'green' : 'red';\n            numberRef.current.style.color = number ? 'green' : 'red';\n            console.log('adas');\n        }\n    }, [myData, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef]);\n}\n\nfunction Form () {\n    const [data, setValue] = useState('');\n    const lengthRef = useRef(), upperCaseRef = useRef(), lowerCaseRef = useRef(), speacialCharacterRef = useRef(), numberRef = useRef();\n    useValueChanged(data, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef);\n    const myStyle = {\n        padding: 5,\n        borderRadius: 5\n    }\n    return (\n        <div>\n            <label>Password: </label>\n            <input style={myStyle} type=\"text\" placeholder=\"Please enter your password\"\n                value={data} onChange={(val) => { setValue(val.target.value) }} />\n            <p>Password must contain: </p>\n            <ul>\n                <li ref={lengthRef}>Minimum eight characters in length</li>\n                <li ref={upperCaseRef}>At least one upper case letter</li>\n                <li ref={lowerCaseRef}>At least one lower case letter</li>\n                <li ref={speacialCharacterRef}>At least one special character, #?!@$%^&*-</li>\n                <li ref={numberRef}>At least one digit</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}