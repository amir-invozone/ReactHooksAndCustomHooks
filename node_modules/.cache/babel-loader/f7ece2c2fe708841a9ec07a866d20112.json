{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/amir-invozone/training/react/custom-hooks/src/app.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst useValueChanged = (myData, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef) => {\n  _s();\n\n  const [isInitialMount, setisInitialMount] = useState(true); // const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    // if (isInitialMount.current) {\n    //     isInitialMount.current = false;\n    // }\n    if (isInitialMount) {\n      setisInitialMount(false);\n    } else {\n      lengthRef.current.style.color = myData.match('.{8,}') ? 'green' : 'red';\n      upperCaseRef.current.style.color = myData.match('(?=.*?[A-Z])') ? 'green' : 'red';\n      lowerCaseRef.current.style.color = myData.match('(?=.*?[a-z])') ? 'green' : 'red';\n      speacialCharacterRef.current.style.color = myData.match('(?=.*?[#?!@$%^&*-])') ? 'green' : 'red';\n      numberRef.current.style.color = myData.match('(?=.*?[0-9])') ? 'green' : 'red';\n      console.log('Updated');\n    }\n  }, [myData]);\n};\n\n_s(useValueChanged, \"7UXj6FWImJStiEFc4ERgAcQkQmw=\");\n\nfunction Form() {\n  _s2();\n\n  const [data, setValue] = useState('');\n  const lengthRef = useRef();\n  const upperCaseRef = useRef();\n  const lowerCaseRef = useRef();\n  const speacialCharacterRef = useRef();\n  const numberRef = useRef();\n  useValueChanged(data, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef);\n  const myStyle = {\n    padding: 5,\n    borderRadius: 5\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: myStyle,\n      type: \"text\",\n      id: \"password\",\n      placeholder: \"Please enter your password\",\n      value: data,\n      onChange: val => {\n        setValue(val.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password must contain: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        ref: lengthRef,\n        children: \"Minimum eight characters in length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: upperCaseRef,\n        children: \"At least one upper case letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: lowerCaseRef,\n        children: \"At least one lower case letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: speacialCharacterRef,\n        children: \"At least one special character, #?!@$%^&*-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: numberRef,\n        children: \"At least one digit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Form, \"xxqUFyLQ/QigWUK/UimxEdqdnps=\", false, function () {\n  return [useValueChanged];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/amir-invozone/training/react/custom-hooks/src/app.js"],"names":["React","useState","useEffect","useRef","useValueChanged","myData","lengthRef","upperCaseRef","lowerCaseRef","speacialCharacterRef","numberRef","isInitialMount","setisInitialMount","current","style","color","match","console","log","Form","data","setValue","myStyle","padding","borderRadius","val","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst useValueChanged = (\n  myData,\n  lengthRef,\n  upperCaseRef,\n  lowerCaseRef,\n  speacialCharacterRef,\n  numberRef,\n) => {\n  const [isInitialMount, setisInitialMount] = useState(true);\n  // const isInitialMount = useRef(true);\n  useEffect(() => {\n    // if (isInitialMount.current) {\n    //     isInitialMount.current = false;\n    // }\n    if (isInitialMount) {\n      setisInitialMount(false);\n    } else {\n      lengthRef.current.style.color = myData.match('.{8,}') ? 'green' : 'red';\n      upperCaseRef.current.style.color = myData.match('(?=.*?[A-Z])') ? 'green' : 'red';\n      lowerCaseRef.current.style.color = myData.match('(?=.*?[a-z])') ? 'green' : 'red';\n      speacialCharacterRef.current.style.color = myData.match('(?=.*?[#?!@$%^&*-])')\n        ? 'green'\n        : 'red';\n      numberRef.current.style.color = myData.match('(?=.*?[0-9])') ? 'green' : 'red';\n      console.log('Updated');\n    }\n  }, [myData]);\n};\n\nfunction Form() {\n  const [data, setValue] = useState('');\n  const lengthRef = useRef();\n  const upperCaseRef = useRef();\n  const lowerCaseRef = useRef();\n  const speacialCharacterRef = useRef();\n  const numberRef = useRef();\n  useValueChanged(data, lengthRef, upperCaseRef, lowerCaseRef, speacialCharacterRef, numberRef);\n  const myStyle = {\n    padding: 5,\n    borderRadius: 5,\n  };\n  return (\n    <div>\n      <label htmlFor=\"password\">Password: </label>\n      <input\n        style={myStyle}\n        type=\"text\"\n        id=\"password\"\n        placeholder=\"Please enter your password\"\n        value={data}\n        onChange={(val) => {\n          setValue(val.target.value);\n        }}\n      />\n      <p>Password must contain: </p>\n      <ul>\n        <li ref={lengthRef}>Minimum eight characters in length</li>\n        <li ref={upperCaseRef}>At least one upper case letter</li>\n        <li ref={lowerCaseRef}>At least one lower case letter</li>\n        <li ref={speacialCharacterRef}>At least one special character, #?!@$%^&*-</li>\n        <li ref={numberRef}>At least one digit</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}